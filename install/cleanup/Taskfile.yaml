version: '3'

dotenv: ['.env']

tasks:
  clean:infra:
    desc: "Delete all GCP resources provisioned by Config Controller."
    cmds:
      - |
        echo "WARNING: This will delete all GCP resources managed by Config Controller. Are you sure? (Type 'yes' to proceed)"
        read confirmation
        if [ "$confirmation" != "yes" ]; then
          echo "Aborting cleanup."
          exit 1
        fi
        
        # Check if config-sync is configured
        if gcloud config-sync repos list --cluster="{{.CONFIG_CONTROLLER_NAME | default "openlane-config-controller"}}" --location="{{.GCP_REGION | default (env "GCP_REGION")}}" --project="{{.GCP_PROJECT_ID | default (env "GCP_PROJECT_ID")}}" --format="value(name)" | grep -q "${GIT_REPO_URL##*/}"; then
          echo "--> Removing Config Sync repository from Config Controller..."
          gcloud config-sync repos remove "${GIT_REPO_URL##*/}" \
            --cluster="{{.CONFIG_CONTROLLER_NAME | default "openlane-config-controller"}}" \
            --location="{{.GCP_REGION | default (env "GCP_REGION")}}" \
            --project="{{.GCP_PROJECT_ID | default (env "GCP_PROJECT_ID")}}" \
            --force
          echo "--> Giving time for resources to be deprovisioned by Config Sync (monitor GCP console for deletion completion)..."
          sleep 120 # Give it some time. Real cleanup can take long.
        else
          echo "No Config Sync repository found for this URL. Proceeding with Config Controller deletion."
        fi

        echo "--> Deleting the Config Controller instance..."
        gcloud config-controller delete "{{.CONFIG_CONTROLLER_NAME | default "openlane-config-controller"}}" \
          --location="{{.GCP_REGION | default (env "GCP_REGION")}}" \
          --project="{{.GCP_PROJECT_ID | default (env "GCP_PROJECT_ID")}}" \
          --force --quiet
        echo "Config Controller deletion initiated. It may take some time."


  clean:argocd:
    desc: "Uninstalls ArgoCD from the Config Controller Kubernetes cluster."
    deps:
      - infra:bootstrap-config-controller # Ensure kubectl context is set
    cmds:
      - |
        echo "--> Getting kubectl credentials for Config Controller cluster..."
        CONFIG_CONTROLLER_CLUSTER_NAME=$(gcloud config-controller list --location "{{.GCP_REGION | default (env "GCP_REGION")}}" --project "{{.GCP_PROJECT_ID | default (env "GCP_PROJECT_ID")}}" --format="value(name)")
        gcloud config-controller get-credentials "${CONFIG_CONTROLLER_CLUSTER_NAME}" --location "{{.GCP_REGION | default (env "GCP_REGION")}}"

        echo "--> Uninstalling ArgoCD."
        helm uninstall argocd --namespace argocd
        kubectl delete namespace argocd --ignore-not-found
