{{- /* Generates ArgoCD Application manifests for each project defined in '.Values.projects'. */}}
{{- $env := .Values.env -}}
{{- if not (and $env (hasKey $env "name")) -}}
  {{- fail "'.Values.env.name' is not defined. Ensure it's set in environment-specific values (e.g., env: { name: \"dev\", capitalizedName: \"Dev\" })." -}}
{{- end -}}
{{- $envName := $env.name -}}
{{- $envCapName := $env.capitalizedName | default ($envName | upper) -}}
{{- $globalValues := .Values -}}

{{- range $projectKey, $projectInstanceConfig_raw := .Values.projects }}
  {{- $projectInstanceConfig := include "gcp-bootstrap.getProjectInstanceConfig" (dict "projectKey" $projectKey "ctx" $) | fromYaml -}}
  {{- $projectType := $projectInstanceConfig.type | required (printf "Project '%s' in .Values.projects is missing the 'type' attribute." $projectKey) -}}
  {{- $projectBlueprint := get $globalValues $projectType | required (printf "Project blueprint type '%s' (for project key '%s') not found in root .Values." $projectType $projectKey) -}}

  {{- if $projectBlueprint.enabled }}
    {{- $argoAppName := printf "openlane-%s-%s" $envName ($projectKey | include "gcp-bootstrap.kebabcase") -}}
    {{- $argoProjectNameForArgoApp := printf "openlane-%s" $envName -}}

    {{- $gcpActualProjectId := include "gcp-bootstrap.gcpProjectId" (dict "projectKey" $projectKey "envName" $envName "ctx" $) -}}

    {{- $parentFolderKey := $projectInstanceConfig.parent | required (printf "Project '%s' is missing 'parent' attribute linking to a folder key." $projectKey) -}}
    {{- $parentFolderKccName := include "gcp-bootstrap.folderKccName" (dict "folderKey" $parentFolderKey) -}}

    {{- $projectValuesForBaseChart := include "gcp-bootstrap.deepCopy" (list $projectBlueprint.project) | fromYaml -}}
    {{- $_ := set $projectValuesForBaseChart "name" $gcpActualProjectId -}}
    {{- $_ := set $projectValuesForBaseChart "displayName" (printf "%s (%s)" ($projectInstanceConfig.displayName | default $projectBlueprint.project.gcpProjectName) $envCapName) -}}
    {{- $_ := set $projectValuesForBaseChart "folderRef" (printf "folders/%s" $parentFolderKccName) -}}
    {{- $_ := set $projectValuesForBaseChart "id" ($projectInstanceConfig.id | default ($projectBlueprint.project.id | default "")) -}}
    
    {{- $finalApis := $projectBlueprint.project.apis | default list | include "gcp-bootstrap.deepCopy" | fromYaml -}}
    {{- if $projectInstanceConfig.apis -}}
      {{- $finalApis = $projectInstanceConfig.apis | include "gcp-bootstrap.deepCopy" | fromYaml -}}
    {{- end -}}
    {{- $_ := set $projectValuesForBaseChart "apis" $finalApis -}}

    {{- $gcpProjectBaseFlags := dict -}}
    {{- if eq $projectType "sharedVpcHost" }}{{- $_ := set $gcpProjectBaseFlags "isSharedVpcHost" true -}}{{- end -}}
    {{- if eq $projectType "loggingProject" }}{{- $_ := set $gcpProjectBaseFlags "isLoggingProject" true -}}{{- end -}}
    {{- if eq $projectType "kmsProject" }}{{- $_ := set $gcpProjectBaseFlags "isKmsProject" true -}}{{- end -}}

    {{- $resourceConfigs := dict -}}
    {{- $knownResourceKeys := list "gkeCluster" "bigquery" "storage" "cloudsql" "memorystore" "dnsZone" "network" "subnets" "firewallRules" "serviceProjects" "logSinks" -}}
    {{- range $resKey := $knownResourceKeys }}
      {{- $finalResConf := dict -}}
      {{- $commonConf := get $globalValues.commonAppConfig $resKey | default dict -}}
      {{- $blueprintConf := get $projectBlueprint $resKey | default dict -}}
      {{- $instanceConf := get $projectInstanceConfig $resKey | default dict -}}
      {{- $finalResConf = merge $finalResConf $commonConf $blueprintConf $instanceConf -}}
      {{- if $finalResConf -}}
        {{- $_ := set $resourceConfigs $resKey $finalResConf -}}
      {{- end -}}
    {{- end -}}

    {{- include "gcp-bootstrap.renderArgoProjectApp" (dict
        "appName" $argoAppName
        "argoProjectName" $argoProjectNameForArgoApp
        "repoURL" $globalValues.repoURL
        "syncWave" "1"
        "projectType" $projectType 
        "projectConfig" $projectValuesForBaseChart 
        "envName" $envName
        "envCapName" $envCapName
        "globalValues" $globalValues 
        "gcpProjectBaseFlags" $gcpProjectBaseFlags 
        "resourceConfigs" $resourceConfigs 
    ) | nindent 0 }}
---
  {{- end -}}
{{- end -}}