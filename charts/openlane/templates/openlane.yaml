apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-openlane
  namespace: openlane
  labels:
    {{- include "openlane.labels" . | nindent 4 }}
  annotations:
    # This checksum will trigger deployment restarts when the ConfigMap changes
    checksum/config: {{ .Values | toYaml | sha256sum }}
spec:
  revisionHistoryLimit: 0
  replicas: {{ .Values.openlane.replicaCount }}
  selector:
    matchLabels:
      {{- include "openlane.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "openlane.selectorLabels" . | nindent 8 }}
      annotations:
        gke-gcsfuse/volumes: "true"
    spec:
      serviceAccountName: openlane-gke-deployment-sa
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - openlane
              topologyKey: "kubernetes.io/hostname"
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            {{- include "openlane.selectorLabels" . | nindent 12 }}
      containers:
        - name: openlane
          args:
            - serve
          envFrom:
          {{- if .Values.openlane.secret.create }}
            - secretRef:
                name: {{ .Values.openlane.secret.name }}
          {{- end }}
          {{- if .Values.openlane.config.create }}
            - configMapRef:
                name: {{ .Values.openlane.config.name }}
          {{- end }}
          image: {{ .Values.openlane.image.repository }}:{{ .Values.openlane.image.tag }}
          imagePullPolicy: Always
          ports:
            - containerPort: 17608
              protocol: TCP
              name: http
            - containerPort: 17609
              protocol: TCP
              name: metrics
          livenessProbe:
            httpGet:
              path: /livez
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /livez
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /livez
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 30
          volumeMounts:
            - name: brandedemails-volume
              mountPath: {{ .Values.openlane.coreConfiguration.email.templatesPath }}
              readOnly: true
            - name: token-keys
              mountPath: {{ .Values.openlane.coreConfiguration.keywatcher.keyDir }}
              readOnly: true
      volumes:
        - name: brandedemails-volume
          csi:
            driver: gcsfuse.csi.storage.gke.io
            readOnly: true
            volumeAttributes:
              bucketName: "branded-emails-bucket"
              mountOptions: "implicit-dirs"
        - name: token-keys
          secret:
            secretName: token-keys
            items:
              - key: tls.key
                path: 01JZ6M4SGPSBJY8ENJ53PG7GYS.pem
