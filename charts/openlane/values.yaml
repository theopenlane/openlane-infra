replicaCount: 1
image:
  repository: us-west1-docker.pkg.dev/neural-vista-433523-c1/openlane/openlane
  tag: "sha256:f77d88975d7be13c7cd90c70e882e227b5a2a6a64e1eef5561500a8b72325a0a"
  pullPolicy: IfNotPresent
serviceAccountName: prod-gke-central1@prod-apps-project.iam.gserviceaccount.com
existingSecret: ""
secret:
  create: false
  name: openlane-app-secret
  annotations: {}
secretEnv:
  CORE_DB_PRIMARYDBSOURCE: ""
  CORE_JOBQUEUE_CONNECTIONURI: ""
  OPENFGA_DATASTORE_URI: ""
  RIVERBOAT_RIVER_DATABASEHOST: ""
  RIVERBOAT_RIVER_WORKERS_EMAILWORKER_CONFIG_TOKEN: ""
  CORE_AUTHZ_CREDENTIALS_APITOKEN: ""
  OPENFGA_AUTHN_PRESHARED_KEYS: ""
  CORE_SESSIONS_SIGNINGKEY: ""
  CORE_SESSIONS_ENCRYPTIONKEY: ""
  CORE_OBJECTSTORAGE_ACCESSKEY: ""
  CORE_OBJECTSTORAGE_SECRETKEY: ""
  CORE_SUBSCRIPTION_PRIVATESTRIPEKEY: ""
  CORE_SUBSCRIPTION_STRIPEWEBHOOKSECRET: ""
  CORE_AUTH_PROVIDERS_GOOGLE_CLIENTSECRET: ""
  CORE_AUTH_PROVIDERS_GITHUB_CLIENTSECRET: ""
  CORE_TOTP_SECRET: ""
cloudsql:
  enabled: true
  instanceSecret: "cloudsql-credentials"
service:
  type: ClusterIP
  port: 80
ingress:
  enabled: true
  className: "gce"
  annotations: {}
  hosts:
    - host: api.example.com
      paths:
        - path: /
          pathType: Prefix
  tls: []
auth:
  token:
    refreshAudience: https://api.theopenlane.io
    issuer: https://api.theopenlane.io
    kid: 16FFBS79AZ12168N0RAW3CEAGG
    jwksEndpoint: https://api.theopenlane.io/.well-known/jwks.json
    generateKeys: "true"
    audience: https://api.theopenlane.io
  authz:
    hostUrl: http://localhost:8080
    createNewModel: "true"
    credentialsApiToken: ""
    modelFile: fga/model/model.fga
  sessions:
    signingKey: ""
    encryptionKey: ""
    domain: .theopenlane.io
  providers:
    google:
      redirectURL: /v1/google/callback
      clientID: 45405492545-7emofbtcl8vd81rqc4af1eqb7mtuca83.apps.googleusercontent.com
      clientSecret: ""
      clientEndpoint: https://api.theopenlane.io
    github:
      redirectURL: /v1/github/callback
      clientID: Ov23liFCzRTms6uIou68
      clientSecret: ""
      clientEndpoint: https://api.theopenlane.io
    webauthn:
      requestOrigins: https://console.theopenlane.io
      relyingPartyID: theopenlane.io
  totp:
    issuer: theopenlane.io
    secret: ""
db:
  runMigrations: "true"
  driverName: pgx
  migrationProvider: goose
  primaryDbSource: ""
  jobQueueConnectionUri: ""
  enableHistory: "true"
  databasename: openlane
objectStorage:
  provider: s3
  region: us-west-2
  accessKey: ""
  secretKey: ""
  defaultBucket: openlane-us-west
subscription:
  enabled: "true"
  publicStripeKey: ""
  privateStripeKey: ""
  stripeBillingPortalSuccessUrl: https://console.theopenlane.io/organization-settings/billing
  stripeWebhookSecret: ""
email:
  companyName: Openlane
  templatesPath: brandedtemplates
  companyAddress: "5150 Broadway St \u00b7 San Antonio \u00b7 TX 78209"
  corporation: "theopenlane Inc."
  fromEmail: no-reply@mail.theopenlane.io
  supportEmail: support@theopenlane.io
  urls:
    root: https://www.theopenlane.io
    product: https://console.theopenlane.io
    docs: https://docs.theopenlane.io
    verify: https://console.theopenlane.io/verify
    invite: https://console.theopenlane.io/invite
    reset: https://console.theopenlane.io/password-reset
    verifySubscriber: https://console.theopenlane.io/subscriber-verify
riverboat:
  image:
    repository: ghcr.io/theopenlane/riverboat
    tag: latest
    pullPolicy: IfNotPresent
  riverDatabaseHost: ""
  workers:
    emailWorker:
      configDevMode: "false"
      configToken: ""
      configFromEmail: no-reply@mail.theopenlane.io
geodetic:
  enabled: "false"
server:
  corsAllowOrigins: "https://console.theopenlane.io,https://www.theopenlane.io,https://studio.apollographql.com,https://docs.theopenlane.io"
  debug: "false"
  metricsPort: ":17609"
  complexityLimit: "200"
  tls:
    enabled: false
    certFile: server.crt
    certKey: server.key
    autoCert: false
  cors:
    enabled: true
    prefixes: ""
    allowOrigins: ""
    cookieInsecure: ""
  secure:
    enabled: true
    xssprotection: "1; mode=block"
    contenttypenosniff: nosniff
    xframeoptions: SAMEORIGIN
    hstspreloadenabled: false
    hstsmaxage: 31536000
    contentsecuritypolicy: "default-src 'self'"
    referrerpolicy: same-origin
    cspreportonly: false
  redirects:
    enabled: true
    redirects: ""
    code: ""
  cacheControl:
    enabled: true
    noCacheHeaders: ""
    etagHeaders: ""
  mime:
    enabled: true
    mimeTypesFile: ""
    defaultContentType: application/data
  graphPool:
    maxWorkers: 100
  enableGraphExtensions: true
  maxResultLimit: 100
openfga:
  datastoreEngine: postgres
  datastoreUri: ""
  presharedKeys: ""
  authnMethod: preshared
  listUsersMaxResults: "10000"
  datastoreMaxOpenConns: "240"
  logFormat: json
  checkQueryCacheEnabled: "true"
  maxConcurrentChecksPerBatchCheck: "500"
  maxChecksPerBatchCheck: "500"
  listObjectsDeadline: 5s
  listObjectsMaxResults: "10000"
  datastoreMaxIdleConns: "200"
  datastoreMetricsEnabled: "true"
  metricsEnabled: "true"
  checkIteratorCacheEnabled: "true"
  checkQueryCacheTTL: 30s
  cacheControllerEnabled: "true"
  cacheControllerTTL: 30s
  requestTimeout: 5s
features:
  dbxEnabled: "false"
api:
  # Additional annotations to apply to the main ConfigMap
  commonAnnotations: {}
