openlane:
  nameOverride: ""
  # Number of API replicas to run
  replicaCount: 3
  image:
    # Container image repository
    repository: ghcr.io/theopenlane/core
    # Image tag to deploy
    tag: "v0.29.3"
    # Kubernetes pull policy for the image
    pullPolicy: IfNotPresent
  # Service account used by the API pods
  serviceAccountName: {}
  # Name of an existing secret with configuration
  existingSecret: ""
  secret:
    # Whether to create the secret resource
    create: false
    # Name for the generated secret
    name: openlane-app-secret
    # Optional annotations for the secret
    annotations: {}
  # Secrets injected as environment variables
  secretEnv:
    # connection string to the primary database
    CORE_DB_PRIMARYDBSOURCE: ""
    # redis or other job queue URI
    CORE_JOBQUEUE_CONNECTIONURI: ""
    # data store for OpenFGA
    OPENFGA_DATASTORE_URI: ""
    # riverboat DB host
    RIVERBOAT_RIVER_DATABASEHOST: ""
    # email worker auth token
    RIVERBOAT_RIVER_WORKERS_EMAILWORKER_CONFIG_TOKEN: ""
    # API token for authz service
    CORE_AUTHZ_CREDENTIALS_APITOKEN: ""
    # pre-shared keys for OpenFGA auth
    OPENFGA_AUTHN_PRESHARED_KEYS: ""
    # HMAC signing key for sessions
    CORE_SESSIONS_SIGNINGKEY: ""
    # encryption key for session cookies
    CORE_SESSIONS_ENCRYPTIONKEY: ""
    # S3 access key
    CORE_OBJECTSTORAGE_ACCESSKEY: ""
    # S3 secret key
    CORE_OBJECTSTORAGE_SECRETKEY: ""
    # Stripe private API key
    CORE_SUBSCRIPTION_PRIVATESTRIPEKEY: ""
    # Stripe webhook secret
    CORE_SUBSCRIPTION_STRIPEWEBHOOKSECRET: ""
    # Google OAuth client secret
    CORE_AUTH_PROVIDERS_GOOGLE_CLIENTSECRET: ""
    # GitHub OAuth client secret
    CORE_AUTH_PROVIDERS_GITHUB_CLIENTSECRET: ""
    # master key for TOTP generation
    CORE_TOTP_SECRET: ""
    # slack webhook URL for notifications
    CORE_SLACK_WEBHOOKURL: ""
  cloudsql:
    # Enable Google Cloud SQL proxy sidecar
    enabled: true
    # Name of the secret containing Cloud SQL credentials
    instanceSecret: "cloudsql-credentials"
  service:
    # Kubernetes Service type
    type: ClusterIP
    # Port the API is exposed on
    port: 80
  ingress:
    enabled: true
    className: "gce"
    annotations: {}
    hosts:
      # When host is empty the global.apiDomain value will be used
      - host: ""
        paths:
          - path: /
            pathType: Prefix
    tls: []
  # -- External Secrets configuration
  externalSecrets:
    # -- Enable external secrets integration
    enabled: true # @schema type:boolean; default:true
    # -- List of external secrets to create
    secrets:
      # -- core-server-secretmanager secret configuration
      core-server-secretmanager:
        # -- Enable this external secret
        enabled: true # @schema type:boolean; default:true
        # -- Environment variable key for server.secretManager
        secretKey: "CORE_SERVER_SECRETMANAGER" # @schema type:string
        # -- Remote key in GCP Secret Manager
        remoteKey: "core-server-secretmanager" # @schema type:string
      # -- core-entconfig-summarizer-llm-gemini-credentialsjson secret configuration
      core-entconfig-summarizer-llm-gemini-credentialsjson:
        # -- Enable this external secret
        enabled: true # @schema type:boolean; default:true
        # -- Environment variable key for entConfig.summarizer.llm.gemini.credentialsJSON
        secretKey: "CORE_ENTCONFIG_SUMMARIZER_LLM_GEMINI_CREDENTIALSJSON" # @schema type:string
        # -- Remote key in GCP Secret Manager
        remoteKey: "core-entconfig-summarizer-llm-gemini-credentialsjson" # @schema type:string
      # -- core-objectstorage-accesskey secret configuration
      core-objectstorage-accesskey:
        # -- Enable this external secret
        enabled: true # @schema type:boolean; default:true
        # -- Environment variable key for objectStorage.accessKey
        secretKey: "CORE_OBJECTSTORAGE_ACCESSKEY" # @schema type:string
        # -- Remote key in GCP Secret Manager
        remoteKey: "core-objectstorage-accesskey" # @schema type:string
      # -- core-objectstorage-secretkey secret configuration
      core-objectstorage-secretkey:
        # -- Enable this external secret
        enabled: true # @schema type:boolean; default:true
        # -- Environment variable key for objectStorage.secretKey
        secretKey: "CORE_OBJECTSTORAGE_SECRETKEY" # @schema type:string
        # -- Remote key in GCP Secret Manager
        remoteKey: "core-objectstorage-secretkey" # @schema type:string
      # -- core-objectstorage-credentialsjson secret configuration
      core-objectstorage-credentialsjson:
        # -- Enable this external secret
        enabled: true # @schema type:boolean; default:true
        # -- Environment variable key for objectStorage.credentialsJSON
        secretKey: "CORE_OBJECTSTORAGE_CREDENTIALSJSON" # @schema type:string
        # -- Remote key in GCP Secret Manager
        remoteKey: "core-objectstorage-credentialsjson" # @schema type:string
      # -- core-subscription-privatestripekey secret configuration
      core-subscription-privatestripekey:
        # -- Enable this external secret
        enabled: true # @schema type:boolean; default:true
        # -- Environment variable key for subscription.privateStripeKey
        secretKey: "CORE_SUBSCRIPTION_PRIVATESTRIPEKEY" # @schema type:string
        # -- Remote key in GCP Secret Manager
        remoteKey: "core-subscription-privatestripekey" # @schema type:string
      # -- core-subscription-stripewebhooksecret secret configuration
      core-subscription-stripewebhooksecret:
        # -- Enable this external secret
        enabled: true # @schema type:boolean; default:true
        # -- Environment variable key for subscription.stripeWebhookSecret
        secretKey: "CORE_SUBSCRIPTION_STRIPEWEBHOOKSECRET" # @schema type:string
        # -- Remote key in GCP Secret Manager
        remoteKey: "core-subscription-stripewebhooksecret" # @schema type:string
      # -- core-keywatcher-secretmanager secret configuration
      core-keywatcher-secretmanager:
        # -- Enable this external secret
        enabled: true # @schema type:boolean; default:true
        # -- Environment variable key for keywatcher.secretManager
        secretKey: "CORE_KEYWATCHER_SECRETMANAGER" # @schema type:string
        # -- Remote key in GCP Secret Manager
        remoteKey: "core-keywatcher-secretmanager" # @schema type:string
      # -- core-slack-webhookurl secret configuration
      core-slack-webhookurl:
        # -- Enable this external secret
        enabled: true # @schema type:boolean; default:true
        # -- Environment variable key for slack.webhookURL
        secretKey: "CORE_SLACK_WEBHOOKURL" # @schema type:string
        # -- Remote key in GCP Secret Manager
        remoteKey: "core-slack-webhookurl" # @schema type:string
podMonitoring:
  enabled: true
  interval: 30s
  scrapeTimeout:
podMonitor:
  # -- If `true`, create a PodMonitor resource to support the Prometheus Operator.
  enabled: true
  # -- Additional labels for the PodMonitor.
  additionalLabels: {}
  # -- Annotations to add to the PodMonitor.
  annotations: {}
  # -- (string) If set create the PodMonitor in an alternate namespace.
  namespace: # @schema type:[string, null]; default: null
  # -- (string) Interval at which Prometheus scrapes metrics.
  interval: # @schema type:[string, null]; default: null
  # -- (string) Timeout if metrics cannot be retrieved in given time interval.
  scrapeTimeout: # @schema type:[string, null]; default: null
riverboat:
  replicaCount: 2
  image:
    # Repository for the riverboat worker image
    repository: ghcr.io/theopenlane/riverboat
    tag: amd64-v0.2.2
    pullPolicy: IfNotPresent
  # Hostname for the riverboat database
  riverDatabaseHost: ""
  workers:
    emailWorker:
      # enable developer mode
      configDevMode: "false"
      # token used by the worker
      configToken: ""
      configFromEmail: no-reply@mail.theopenlane.io
riverboatui:
  image:
    # Repository for the riverboat UI image
    repository: ghcr.io/riverqueue/riverui
    tag: latest
    pullPolicy: IfNotPresent
  # Hostname for the riverboat database
  riverDatabaseHost: ""
  # Port for the UI service
  servicePort: 8080
  secretName: riverboatui-app-secret
