openfga:
  replicaCount: 3

  image:
    repository: openfga/openfga
    pullPolicy: Always
    tag: ""

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""
  serviceAccount:
    create: true
    annotations:
      argocd.argoproj.io/hook: PreSync
      argocd.argoproj.io/sync-wave: "-2"
    name: ""

  annotations: {}

  podAnnotations: {}
  podExtraLabels: {}

  extraEnvVars:
    - name: OPENFGA_MAX_CHECKS_PER_BATCH_CHECK
      value: "500"
    - name: OPENFGA_CHECK_CACHE_LIMIT
      value: "50000"
    - name: OPENFGA_CHECK_ITERATOR_CACHE_ENABLED
      value: "true"
    - name: OPENFGA_CHECK_ITERATOR_CACHE_MAX_RESULTS
      value: "50000"
    - name: OPENFGA_CHECK_ITERATOR_CACHE_TTL
      value: "60s"
    - name: OPENFGA_CACHE_CONTROLLER_ENABLED
      value: "true"
    - name: OPENFGA_CACHE_CONTROLLER_TTL
      value: "60s"
    - name: OPENFGA_CHECK_DISPATCH_THROTTLING_ENABLED
      value: "true"
    - name: OPENFGA_CHECK_DISPATCH_THROTTLING_THRESHOLD
      value: "500"
    - name: OPENFGA_LIST_OBJECTS_ITERATOR_CACHE_ENABLED
      value: "true"
    - name: OPENFGA_LIST_OBJECTS_ITERATOR_CACHE_MAX_RESULTS
      value: "10000"
    - name: OPENFGA_LIST_OBJECTS_ITERATOR_CACHE_TTL
      value: "60s"
    - name: OPENFGA_LIST_OBJECTS_DISPATCH_THROTTLING_THRESHOLD
      value: "500"
    - name: OPENFGA_LIST_USERS_DISPATCH_THROTTLING_ENABLED
      value: "true"
    - name: OPENFGA_LIST_USERS_DISPATCH_THROTTLING_THRESHOLD
      value: "500"
  extraVolumes: []
  extraVolumeMounts: []
  extraInitContainers: []

  podSecurityContext:
    {}
    # fsGroup: 2000

  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  initContainer:
    repository: groundnuty/k8s-wait-for
    tag: "v2.0"
    pullPolicy: IfNotPresent

  livenessProbe:
    enabled: true
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 12
    successThreshold: 1


  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1

  startupProbe:
    enabled: false
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 30
    successThreshold: 1


  customLivenessProbe: {}

  customReadinessProbe: {}

  customStartupProbe: {}

  service:
    annotations: {}
    type: ClusterIP
    port: 8080

  telemetry:
    trace:
      enabled: false
      otlp:
        endpoint:
        tls:
          enabled: false
      sampleRatio:

    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
        namespace: "openfga"

  datastore:
    engine: postgres
    existingSecret: cloudsql-credentials
    secretKeys:
      uriKey: uri
    maxCacheSize:
    maxOpenConns: 30
    maxIdleConns: 10
    connMaxIdleTime: 1h
    connMaxLifetime: 1h
    applyMigrations: true
    waitForMigrations: true
    migrationType: job
    migrations:
      resources: {}
      image:
        repository: groundnuty/k8s-wait-for
        pullPolicy: Always
        tag: "v2.0"

  postgresql:
    ## @param postgresql.enabled enable the bitnami/postgresql subchart and deploy Postgres
    enabled: false

  mysql:
    ## @param mysql.enabled enable the bitnami/mysql subchart and deploy MySQL
    enabled: false

  grpc:
    addr: 0.0.0.0:8081
    tls:
      enabled: false
      cert:
      key:
      ca:

  http:
    enabled: true
    addr: 0.0.0.0:8080
    tls:
      enabled: false
      cert:
      key:
    upstreamTimeout:
    corsAllowedOrigins: ["*"]
    corsAllowedHeaders: ["*"]

  authn:
    method: preshared
    preshared:
      keys: []
      keysSecret: preshared-keys
    oidc:
      audience:
      issuer:

  playground:
    enabled: false

  profiler:
    enabled: false
    addr: 0.0.0.0:3001

  log:
    level: info
    format: json
    timestampFormat: Unix

  checkQueryCache:
    enabled: true
    limit: # deprecated, see OPENFGA_CHECK_CACHE_LIMIT
    ttl: 60s

  experimentals:
    - enable-check-optimizations
    - enable-list-objects-optimizations

  maxTuplesPerWrite:
  maxTypesPerAuthorizationModel:
  maxAuthorizationModelSizeInBytes:
  maxConcurrentReadsForCheck: 1000
  maxConcurrentReadsForListObjects: 1000
  maxConcurrentReadsForListUsers: 1000
  changelogHorizonOffset:
  resolveNodeLimit:
  resolveNodeBreadthLimit:
  listObjectsDeadline: 10s
  listObjectsMaxResults: 1000
  listUsersDeadline: 10s
  listUsersMaxResults: 1000
  requestTimeout: 10s
  requestDurationDatastoreQueryCountBuckets: [50, 200]
  allowWriting1_0Models:
  allowEvaluating1_0Models:

  ingress:
    enabled: false
    className: ""
    annotations:
      {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
            # servicePort: 8080
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}

  lifecycle: {}

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  topologySpreadConstraints: []

  affinity: {}

  sidecars: []
  migrate:
    extraVolumes: []
    extraVolumeMounts: []
    extraInitContainers: []
    sidecars: []
    annotations:
      helm.sh/hook: null
      helm.sh/hook-weight: null
      helm.sh/hook-delete-policy: null
      argocd.argoproj.io/hook: PreSync
      argocd.argoproj.io/sync-wave: "-1"
    timeout:

  testPodSpec: {}
  testContainerSpec: {}

podMonitoring:
  enabled: true
  interval: 30s
  scrapeTimeout: