digraph G {
    graph [
        splines=true;
        overlap=false;
        nodesep=0.6; /* Reduced node spacing */
        ranksep=0.7; /* Space between ranks / layers */
        rankdir="TD"; /* Top-Down layout for better vertical flow */
        fontsize=16;
        label="Openlane GCP Infrastructure Architecture";
        labelloc="t"; /* Label at top */
        fontname="Helvetica";
        pad="0.5,0.5";
    ];
    node [
        fontname="Helvetica";
        fontsize=10;
        shape=box;
        style="filled";
        fillcolor="#F5F5F5";
    ];
    edge [
        fontname="Helvetica";
        fontsize=8;
        color="#888888";
    ];

    # Layer 0: GitOps / Orchestration (Initial Flow)
    subgraph cluster_orchestration {
        label = "Layer 0: GitOps & Orchestration";
        graph [bgcolor="#E0FFE0", style=filled, labelloc="t", rankdir="LR", nodesep=0.7];
        node [shape=circle, fillcolor="#C8F5C8", color="#4CAF50", height=0.6, width=0.6, fixedsize=true];

        GitRepo [label="Git Repo\n(Source of Truth)"];
        ArgoCD [label="ArgoCD\n(Reconciler)"];
        K8sClusterKCC [label="Kubernetes\n(KCC Host)"];
        GCP_API [label="GCP API\nEndpoint", shape=octagon, fillcolor="#FFEEEE", color="#FF5757"];

        GitRepo -> ArgoCD [label="Pulls State"];
        ArgoCD -> K8sClusterKCC [label="Applies K8s Manifests"];
        K8sClusterKCC -> GCP_API [label="KCC Manages GCP Resources"];
    }


    # Layer 1: Configuration Blueprints (Helm Charts)
    subgraph cluster_helm_blueprints {
        label = "Layer 1: Configuration Blueprints (Helm Charts)";
        graph [bgcolor="#E6E6FF", style=filled, labelloc="t", rankdir="LR", nodesep=0.7];
        node [shape=folder, fillcolor="#CCCCFF", color="#6A5ACD"];

        BootstrapChart [label="openlane-gcp-bootstrap\n(Bootstrap Chart)"];
        ProjectChart [label="gcp-project\n(Project Chart)"];
        ResourceCharts [label="Resource Charts\n(GKE, BQ, Storage, SQL, Redis, DNS)"];

        BootstrapChart -> ProjectChart [label="Defines as\nDependency", style="dotted", color="#6A5ACD", constraint=false];
        ProjectChart -> ResourceCharts [label="Defines as\nDependency", style="dotted", color="#6A5ACD", constraint=false];

        # Connections from Git (conceptual)
        GitRepo -> BootstrapChart [label="Contains Chart Def", style="dotted", color="#000000", dir=back];
    }


    # Layer 2: Deployed ArgoCD Applications (Instance-Level Orchestration)
    subgraph cluster_argocd_apps {
        label = "Layer 2: Deployed ArgoCD Applications";
        graph [bgcolor="#FFEEE0", style=filled, labelloc="t", rankdir="LR", nodesep=0.7];
        node [shape=component, fillcolor="#FFDAB9", color="#FFA500"];

        # Consolidated nodes for the pattern
        BootstrapApp [label="1. Bootstrap App\n(openlane-<env>-bootstrap)"];
        ProjectApps [label="2. Project Apps\n(openlane-<env>-<project-type>)"];

        # Relationships
        ArgoCD -> BootstrapApp [label="Manages ArgoCD App", style="dashed", color="#3CB371"];
        BootstrapApp -> ProjectApps [label="Generates & Manages\n(ArgoCD App CRs)"];

        # Link to Helm Blueprints
        BootstrapChart -> BootstrapApp [label="Blueprint for", style="dotted", color="#FFA500", constraint=false];
        ProjectChart -> ProjectApps [label="Blueprint for", style="dotted", color="#FFA500", constraint=false];
    }


    # Layer 3: GCP Resource Hierarchy (Folders & Projects)
    subgraph cluster_gcp_hierarchy {
        label = "Layer 3: GCP Resource Hierarchy (Folders & Projects)";
        graph [bgcolor="#FFCCCB", style=filled, labelloc="t", rankdir="LR", nodesep=0.5];
        node [fillcolor="#FFDDDD", color="#FF5757"]; /* Projects, Folders */

        GCP_Organization [label="GCP Organization\n(Root Node)", shape=oval];

        subgraph cluster_folders_groups {
            label = "Environment & Specialized Folders";
            graph [bgcolor="#FFBBBB", style=filled, randir="LR"];
            node [shape=folder, fillcolor="#FFECEC", color="#FF5757"];

            GlobalOrgFolder [label="openlane-org"];
            EnvFolders [label="{<Dev>Dev|<Prod>Prod}\n(e.g., openlane-org-dev)"];
            SpecializedFolders [label="App\nSharedInfra\nLogging\nBilling\nKMS"];

            GlobalOrgFolder -> EnvFolders [label="Contains", dir=none];
            EnvFolders -> SpecializedFolders [label="Contains (per-env)", dir=none];
        }

        subgraph cluster_project_instances {
            label = "GCP Projects (Instantiated per-env)";
            graph [bgcolor="#FFDDAA", style=filled, randir="LR"];
            node [fillcolor="#FFEECC", color="#FFA500"];

            SharedVPC_Host_Project [label="Shared VPC Host\n(Dev & Prod)"];
            Application_Project [label="Application Project\n(Dev & Prod)"];
            Logging_Project [label="Logging Project\n(Dev & Prod)"];
            Billing_Project [label="Billing Project\n(Dev & Prod)"];
            KMS_Project [label="KMS Project\n(Dev & Prod)"];
        }

        # Hierarchy Links
        GCP_Organization -> GlobalOrgFolder [label="Owns"];
        SpecializedFolders -> {SharedVPC_Host_Project, Application_Project, Logging_Project, Billing_Project, KMS_Project} [label="Contains"];
    }


    # Layer 4: Deployed GCP Services (Resource Instances)
    subgraph cluster_gcp_services {
        label = "Layer 4: Deployed GCP Services";
        graph [bgcolor="#FFFFAA", style=filled, labelloc="t", rankdir="LR", nodesep=0.5];
        node [shape=cylinder, fillcolor="#FFFFDD", color="#FFD700"];

        VPC_Network [label="VPC Network"];
        GKE_Cluster [label="GKE Cluster"];
        BigQuery_Dataset [label="BigQuery Dataset"];
        GCP_Bucket [label="Cloud Storage Bucket"];
        CloudSQL_Instance [label="Cloud SQL Instance"];
        Central_Logging_Bucket [label="Logs Bucket"];
        Central_Logging_Dataset [label="Logs Dataset"];
        KMS_Keys [label="KMS Keys"];
        # ... other services like Redis, DNS Zone, etc.

        # Links from Projects to Services
        SharedVPC_Host_Project -> VPC_Network [label="Manages"];
        Application_Project -> {GKE_Cluster, BigQuery_Dataset, GCP_Bucket, CloudSQL_Instance} [label="Manages"];
        Logging_Project -> {Central_Logging_Bucket, Central_Logging_Dataset} [label="Manages"];
        KMS_Project -> KMS_Keys [label="Manages"];

        # Service Interconnections (simplified)
        VPC_Network -> GKE_Cluster [label="Provides Network", style="dotted", color="#000000"];
        KMS_Keys -> {BigQuery_Dataset, GCP_Bucket, CloudSQL_Instance} [label="Encrypts", style="dotted", color="#000000"];
    }

    # --- Inter-Layer Connections (General Flow) ---
    # Orchestration -> Helm Blueprints -> ArgoCD Apps -> GCP Hierarchy -> GCP Services

    # Connect ArgoCD to Helm Blueprints
    BootstrapChart -> BootstrapApp [label="Blueprint for", style="dotted", color="#FFA500", constraint=false];
    ProjectChart -> ProjectApps [label="Blueprint for", style="dotted", color="#FFA500", constraint=false];
    ResourceCharts -> ProjectApps [label="Blueprint for", style="dotted", color="#FFA500", constraint=false];

    # ArgoCD Apps to GCP Hierarchy (creates projects/folders)
    BootstrapApp -> GCP_Organization [label="Targets Org Level", style="dashed", color="#6A5ACD", constraint=false];
    ProjectApps -> {SharedVPC_Host_Project, Application_Project, Logging_Project, Billing_Project, KMS_Project} [label="Creates/Manages Project", style="dashed", color="#6A5ACD", constraint=false];

    # GCP Hierarchy (Layer 3) manages GCP Services (Layer 4)
    # These are already linked by the "Manages" edges within Layer 4's subgraph
}
